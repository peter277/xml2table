<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.peter277</groupId>
    <artifactId>xml2table</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <name>xml2table conversion utility</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Fallback platform suffix if no platform specific profile is activated -->
        <platform.suffix>other</platform.suffix>

        <!-- Target JDK version -->
        <jdk.version>11</jdk.version>

        <!-- Minimum build tool version prerequisites to enforce -->
        <enforcer.min.maven.version>3.9.6</enforcer.min.maven.version>
        <enforcer.min.jdk.version>11.0.0</enforcer.min.jdk.version>

        <!-- Plugin versions -->
        <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
        <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>
        <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
        <markdown-page-generator-plugin.version>2.4.2</markdown-page-generator-plugin.version>
        <maven-jlink-plugin.version>3.2.0</maven-jlink-plugin.version>
        <jpackage-maven-plugin.version>1.6.6</jpackage-maven-plugin.version>
    </properties>

    <profiles>
        <!-- Windows 64-bit -->
        <profile>
            <id>windows-amd64</id>
            <activation>
                <os>
                    <family>Windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <platform.suffix>win-x86_64</platform.suffix>
            </properties>
        </profile>

        <!-- Windows 32-bit -->
        <profile>
            <id>windows-x86</id>
            <activation>
                <os>
                    <family>Windows</family>
                    <arch>x86_32</arch>
                </os>
            </activation>
            <properties>
                <platform.suffix>win-x86_32</platform.suffix>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
        
            <!-- Enforce build prerequisites -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <!-- Require minimum Maven version -->
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${enforcer.min.maven.version}</version>
                                    <message>Maven ${enforcer.min.maven.version} or higher required for build</message>
                                </requireMavenVersion>
                            </rules>    
                        </configuration>
                    </execution>
                    
                    <!-- Require minimum Java version -->
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${enforcer.min.jdk.version}</version>
                                    <message>JDK ${enforcer.min.jdk.version} or higher required for build</message>
                                </requireJavaVersion>
                            </rules>    
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>${jdk.version}</release>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.github.peter277.xml2table.Main</mainClass>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate HTML files for README and LICENSE -->
            <plugin>
                <groupId>com.ruleoftech</groupId>
                <artifactId>markdown-page-generator-plugin</artifactId>
                <version>${markdown-page-generator-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputDirectory>${project.basedir}</inputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Create a custom JRE image using jlink -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jlink-plugin</artifactId>
                <version>${maven-jlink-plugin.version}</version>
                <extensions>true</extensions>

                <configuration>
                    <!-- Classify as supplemental artifact -->
                    <classifier>runtime-image</classifier>
                    
                    <!-- Compress resources -->
                    <compress>zip-6</compress>
                    
                    <!-- Strip debug and man pages -->
                    <stripDebug>true</stripDebug>
                    <noHeaderFiles>true</noHeaderFiles>
                    <noManPages>true</noManPages>

                    <!-- Create a launcher -->
                    <!-- <launcher>xml2table=com.github.peter277.xml2table/com.github.peter277.xml2table.Main</launcher> -->
                </configuration>

                <executions>
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jlink</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Run jpackage, using runtime pre-generated by custom invocation of JLink -->
            <plugin>
                <groupId>org.panteleyev</groupId>
                <artifactId>jpackage-maven-plugin</artifactId>
                <version>${jpackage-maven-plugin.version}</version>
                <configuration>
                    <type>APP_IMAGE</type>
                    <name>xml2table</name>
                    <appVersion>${project.version}</appVersion>
                    <vendor>com.github.peter277</vendor>
                    <module>com.github.peter277.xml2table/com.github.peter277.xml2table.Main</module>
                    <destination>${project.build.directory}/jpackage</destination>
                    <javaOptions>
                        <option>--enable-preview</option>
                    </javaOptions>
                    <runtimeImage>${project.build.directory}/maven-jlink/classifiers/runtime-image</runtimeImage>
                    <winConsole>true</winConsole>
                    <removeDestination>true</removeDestination>
                </configuration>
                
                <executions>
                    <execution>
                    <id>create-app-image</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jpackage</goal>
                    </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Assemble distributions -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <!-- Execution 1: JAR zip -->
                    <execution>
                    <id>make-jar-assembly</id>
                    <phase>package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/jar-zip.xml</descriptor>
                        </descriptors>
                        <appendAssemblyId>false</appendAssemblyId>
                        <finalName>${project.artifactId}-${project.version}-bin-jar</finalName>
                    </configuration>
                    </execution>

                    <!-- Execution 2: JPackage -->
                    <execution>
                    <id>make-jpackage-assembly</id>
                    <phase>package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                    <configuration>
                        <descriptors>
                            <descriptor>src/assembly/jpackage-zip.xml</descriptor>
                        </descriptors>
                        <appendAssemblyId>false</appendAssemblyId>
                        <attach>false</attach>
                        <finalName>${project.artifactId}-${project.version}-bin-${platform.suffix}</finalName>
                    </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Defines version ignore patterns for scripts/mvn-dep-check.sh, affecting both dependency and plugin updates.
                 These patterns are also passed via the "-Dmaven.version.ignore=" command-line option,
                 but are included here as a reference and placeholder for potential future project-specific rules. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <configuration>
                <ruleSet>
                    <ignoreVersions>
                    <ignoreVersion>
                        <!-- Ignore any version containing -alpha, -beta, -rc or -M qualifiers -->
                        <type>regex</type>
                        <version>(?i).*[-_\.](alpha|beta|rc|M\d).*</version>
                    </ignoreVersion>
                    </ignoreVersions>
                </ruleSet>
                </configuration>
            </plugin>

        </plugins>
    </build>
    
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.12.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
            <version>7.1.0</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.7.7</version>
        </dependency>
    </dependencies>
    
</project>
